{"version":3,"sources":["components/User/FormComponent.tsx","hooks/useInput.tsx","hooks/useService.tsx","state/NotificationContext.tsx","state/UserContext.tsx","components/User/StdFormInput.tsx","components/User/LoginForm.tsx","components/User/RegisterForm.tsx","utils/StringUtils.ts","components/NavbarTop.tsx","utils/Sort.ts","state/PostContext.tsx","components/Modal/ModalForm.tsx","hooks/useModalBtn.tsx","components/Modal/NewPostModal.tsx","components/Modal/DeletePostModal.tsx","components/Modal/EditPostModal.tsx","utils/DateFormat.ts","components/Post/Post.tsx","components/Post/PostList.tsx","components/Post/PostsHome.tsx","components/Notification.tsx","components/User/EditFormInput.tsx","components/User/MyAccount.tsx","components/User/UserProfile.tsx","App.tsx","state/StateProvider.tsx","index.tsx"],"names":["FormComponent","body","onSubmit","className","useInput","type","placeholder","initValue","useState","value","setValue","onChange","e","target","useService","baseUrlProp","baseUrl","user","useUser","getToken","headers","Authorization","token","getAll","a","axios","get","req","data","id","create","obj","url","post","remove","delete","update","actualUrl","put","contextDefaultValues","notification","newNotification","NotificationState","React","createContext","useNotification","useContext","NotificationContext","children","setNotification","Provider","msg","noMessage","setTimeout","login","register","updateUser","logout","fetchLocalStorageForUser","updateUserDetails","UserState","UserContext","setUser","userService","useEffect","setLocalStorageForUser","credentials","activeUser","console","log","response","errorMsg","newUser","userToUpdate","updatedUser","name","email","window","localStorage","removeItem","activeUserJSON","getItem","JSON","parse","setItem","stringify","StdFormInput","inputField","label","requiredField","defaultValue","maxLength","required","htmlFor","LoginForm","password","href","style","color","preventDefault","RegisterForm","userIdPath","NavbarTop","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","Link","onClick","sortByDateDesc","posts","sort","b","Date","date","getTime","addPost","deletePost","updatePost","upvotePost","downvotePost","PostState","usePosts","PostContext","setPosts","postService","repeat","fetch","fetchedPosts","clearTimeout","savedPost","unsortedPosts","concat","filter","el","updatedPost","map","upvotedPost","downvotedPost","ModalForm","handleSubmit","modalBtn","modalBody","modalTitle","modalConfirm","show","setShow","handleClose","text","Modal","onHide","animation","dialogClassName","Header","Title","Body","Footer","useModalBtn","title","NewPostModal","content","author","toISOString","upvotes","rows","DeletePostModal","EditPostModal","formatDate","dayjsObj","dayjs","now","actualDate","format","Post","textDecoration","whiteSpace","icon","faArrowUp","faArrowDown","PostList","createNewButton","PostsHome","Notification","role","EditFormInput","MyAccount","oldPassword","newPassword","setEmail","setName","UserProfile","userId","userPosts","setUserPosts","fetchedUserPosts","App","match","useRouteMatch","path","params","exact","to","State","StateProvider","history","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82a1eea7.chunk.js","sourcesContent":["import * as React from \"react\";\n\ninterface Props {\n  body: () => JSX.Element;\n  onSubmit: (e: React.FormEvent) => void;\n}\n\nexport const FormComponent = ({ body, onSubmit }: Props) => {\n  return (\n    <>\n      <div className='d-flex h-100 justify-content-center align-items-center'>\n        <div className='card mt-3 col-12 col-sm-10 col-md-8 col-lg-4'>\n          <div className='card-body mt-3'>\n            <form onSubmit={onSubmit}>{body()}</form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const useInput = (\n  type: string,\n  placeholder: string,\n  initValue?: string\n) => {\n  const [value, setValue] = useState(initValue ? initValue : \"\");\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(e.target.value);\n  };\n\n  const onSubmit = () => {\n    setValue(\"\");\n  };\n\n  return {\n    type,\n    value,\n    placeholder,\n    onSubmit,\n    onChange,\n  };\n};\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useUser } from \"../state/UserContext\";\n\nexport const useService = (baseUrlProp: string) => {\n  const [baseUrl] = useState<string>(baseUrlProp);\n\n  const { user } = useUser();\n\n  const getToken = () => {\n    // console.log(\"Token\", user);\n    return user ? { headers: { Authorization: `bearer ${user.token}` } } : {};\n  };\n\n  const getAll = async () => {\n    const req = await axios.get(baseUrl, getToken());\n    // console.log(\"Request\", req, req.data);\n    return req.data;\n  };\n\n  const get = async (id: string) => {\n    // console.log(\"service token\", getToken());\n    const req = await axios.get(`${baseUrl}/${id}`, getToken());\n    // console.log(\"Request\", req, req.data);\n    return req.data;\n  };\n\n  const create = async (obj: any, url: string = \"\") => {\n    const req = await axios.post(baseUrl + url, obj, getToken());\n    // console.log(\"Request\", req, req.data);\n    return req.data;\n  };\n\n  const remove = async (id: string) => {\n    const req = await axios.delete(`${baseUrl}/${id}`, getToken());\n    return req.data;\n  };\n\n  const update = async (id: string, obj: any, actualUrl?: string) => {\n    const url = actualUrl ? actualUrl : baseUrl;\n    const req = await axios.put(`${url}/${id}`, obj, getToken());\n    return req.data;\n  };\n\n  return { getAll, get, create, remove, update };\n};\n","import React, { useContext, useState } from \"react\";\nimport { ContextProps, NotificationContextState } from \"../types/types\";\n\nconst contextDefaultValues: NotificationContextState = {\n  notification: \"\",\n  newNotification: () => {},\n};\n\nconst NotificationState =\n  React.createContext<NotificationContextState>(contextDefaultValues);\n\nexport function useNotification() {\n  return useContext(NotificationState);\n}\n\nexport const NotificationContext = ({ children }: ContextProps) => {\n  const [notification, setNotification] = useState<string>(\"\");\n\n  const newNotification = (msg: string) => {\n    const noMessage = notification === \"\";\n    setNotification(msg);\n    if (noMessage) setTimeout(() => setNotification(\"\"), 5000);\n  };\n\n  return (\n    <NotificationState.Provider\n      value={{\n        notification,\n        newNotification,\n      }}\n    >\n      {children}\n    </NotificationState.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useService } from \"../hooks/useService\";\nimport {\n  ContextProps,\n  IUserNew,\n  UserContextState,\n  IUserLogin,\n  IUserToken,\n  IUserUpdate,\n} from \"../types/types\";\nimport { useNotification } from \"./NotificationContext\";\n\nconst contextDefaultValues: UserContextState = {\n  user: null,\n  login: () => {},\n  register: () => {},\n  updateUser: () => {},\n  logout: () => {},\n  fetchLocalStorageForUser: () => {},\n  updateUserDetails: () => {},\n};\n\nconst UserState = React.createContext<UserContextState>(contextDefaultValues);\n\nexport function useUser() {\n  return useContext(UserState);\n}\n\nexport const UserContext = ({ children }: ContextProps) => {\n  const [user, setUser] = useState<IUserToken | null>(null);\n\n  const baseUrl = \"/api/users\";\n  const userService = useService(baseUrl);\n\n  const { newNotification } = useNotification();\n\n  useEffect(() => {\n    // console.log(user);\n    if (user === null) fetchLocalStorageForUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateUser = (user: any) => {\n    setLocalStorageForUser(user);\n    setUser(user);\n  };\n\n  const login = async (credentials: IUserLogin) => {\n    try {\n      const activeUser = await userService.create(credentials, \"/login\");\n      // Update localStorage\n      setLocalStorageForUser(activeUser);\n      // Update state\n      setUser(activeUser);\n      newNotification(\"\");\n    } catch (error) {\n      console.log(\"Invalid login credentials\", error.response.data);\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  const register = async (user: IUserNew) => {\n    try {\n      const newUser = await userService.create(user, \"/register\");\n      if (newUser) {\n        // Update localStorage\n        setLocalStorageForUser(newUser);\n        // Update state\n        setUser(newUser);\n      }\n    } catch (error) {\n      console.log(\"error creating new user:\", error.response.data);\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  const updateUserDetails = async (userToUpdate: IUserUpdate) => {\n    try {\n      let updatedUser;\n      if (user && user.id) {\n        updatedUser = await userService.update(user.id, userToUpdate);\n        updateUser({\n          ...user,\n          name: updatedUser.name,\n          email: updatedUser.email,\n        });\n      }\n      // Update token?\n    } catch (error) {\n      console.log(\"Error updating user details\", error.response.data);\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  const logout = async () => {\n    window.localStorage.removeItem(\"activeUser\");\n    setUser(null);\n  };\n\n  const fetchLocalStorageForUser = async () => {\n    // console.log(\"UserTOKEN\", user);\n    // console.log(\"fetching localStorage...\");\n    const activeUserJSON = window.localStorage.getItem(\"activeUser\");\n    // console.log(\"Active user\", activeUserJSON);\n    if (activeUserJSON) {\n      const user = JSON.parse(activeUserJSON);\n\n      setUser(user);\n    }\n  };\n\n  const setLocalStorageForUser = (activeUser: any) => {\n    window.localStorage.setItem(\"activeUser\", JSON.stringify(activeUser));\n    console.log(\"set token\", activeUser.token);\n  };\n\n  return (\n    <UserState.Provider\n      value={{\n        user,\n        login,\n        register,\n        updateUser,\n        logout,\n        fetchLocalStorageForUser,\n        updateUserDetails,\n      }}\n    >\n      {children}\n    </UserState.Provider>\n  );\n};\n","interface Props {\n  inputField: any;\n  label: string;\n  id: string;\n  requiredField?: boolean;\n  defaultValue?: string;\n}\n\nexport const StdFormInput = ({\n  inputField,\n  label,\n  id,\n  requiredField = true,\n  defaultValue,\n}: Props) => {\n  return (\n    <div className='form-floating custom-form mt-2'>\n      <input\n        {...inputField}\n        className='col-12 form-control'\n        maxLength={30}\n        id={id}\n        required={requiredField}\n        defaultValue={defaultValue}\n      />\n      <label htmlFor={id}>{label}</label>{\" \"}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { FormComponent } from \"./FormComponent\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { useUser } from \"../../state/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport { StdFormInput } from \"./StdFormInput\";\n\nexport const LoginForm = () => {\n  const email = useInput(\"email\", \"Email\");\n  const password = useInput(\"password\", \"Password\");\n\n  const { login, user } = useUser();\n\n  const handleLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    const credentials = {\n      email: email.value,\n      password: password.value,\n    };\n    login(credentials);\n    if (user) {\n      console.log(\"succsessful login\", user);\n      email.onSubmit();\n      password.onSubmit();\n\n      <Link to='/' />;\n    }\n  };\n\n  const formBody = () => {\n    return (\n      <div>\n        <h2>Login</h2>\n        <div className='card-text'>\n          <StdFormInput inputField={email} label='Email' id='email' />\n          <StdFormInput inputField={password} label='Password' id='password' />\n        </div>\n        <div className='card-footer mt-3'>\n          <button type='submit' className='btn btn-primary main-button'>\n            Log in\n          </button>\n          <br />\n          <button className='text-button mt-3'>\n            <a href='/register' style={{ color: \"white\" }}>\n              Register a new account here\n            </a>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return <FormComponent body={formBody} onSubmit={handleLogin} />;\n};\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { useUser } from \"../../state/UserContext\";\nimport { IUserNew } from \"../../types/types\";\nimport { FormComponent } from \"./FormComponent\";\nimport { StdFormInput } from \"./StdFormInput\";\n\nexport const RegisterForm = () => {\n  const email = useInput(\"email\", \"Email\");\n  const password = useInput(\"password\", \"Password\");\n  const name = useInput(\"text\", \"Name\");\n\n  const { register, user } = useUser();\n\n  const handleRegister = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const newUser: IUserNew = {\n      email: email.value,\n      password: password.value,\n      name: name.value,\n    };\n\n    register(newUser);\n\n    console.log(user);\n\n    if (user) {\n      console.log(\"succsessful register\", user);\n      email.onSubmit();\n      password.onSubmit();\n      name.onSubmit();\n\n      <Link to='/' />;\n    }\n  };\n\n  const formBody = () => {\n    return (\n      <div>\n        <h2>Register</h2>\n        <div className='card-text'>\n          <StdFormInput inputField={email} label='Email' id='email' />\n          <StdFormInput inputField={name} label='Name' id='name' />\n          <StdFormInput inputField={password} label='Password' id='password' />\n        </div>\n        <div className='card-footer mt-3'>\n          <button type='submit' className='btn btn-primary main-button'>\n            Register\n          </button>\n          <br />\n          <button className='text-button mt-3'>\n            <a href='/login' style={{ color: \"white\" }}>\n              Already have an account? Log in here\n            </a>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return <FormComponent body={formBody} onSubmit={handleRegister} />;\n};\n","import { IUserToken } from \"../types/types\";\n\nexport const userIdPath = (user: IUserToken): string => {\n  if (user !== null) {\n    return `/user/${user.id}`;\n  }\n  return \"\";\n};\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { useUser } from \"../state/UserContext\";\nimport { userIdPath } from \"../utils/StringUtils\";\n\nexport const NavbarTop = () => {\n  const { user, logout } = useUser();\n\n  useEffect(() => {\n    // console.log(\"User\", user);\n  }, [user]);\n\n  return (\n    <div>\n      <Navbar\n        collapseOnSelect\n        expand='lg'\n        bg='dark'\n        variant='dark'\n        className='mt-3'\n      >\n        <Navbar.Brand href='/'>\n          <h1>PostApp</h1>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          <Nav className='mr-auto'>\n            {/* <Nav.Link href='#features'>Features</Nav.Link> */}\n          </Nav>\n          <Nav className='ms-auto'>\n            {/* Add component for handling logged in/logged out */}\n            {!user ? (\n              <>\n                <Nav.Link href='/login'>Log in</Nav.Link>\n                <Nav.Link href='/register'>Register</Nav.Link>\n              </>\n            ) : (\n              <>\n                <Nav.Link href='/'>Home</Nav.Link>\n                <Nav.Link href={userIdPath(user)}>{user.name}</Nav.Link>\n                <Nav.Link href='/account'>My Account</Nav.Link>\n                <Nav.Link href='/login' onClick={logout}>\n                  Log out\n                </Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n","import { IPost } from \"../types/types\";\n\nexport const sortByDateDesc = (posts: IPost[]): IPost[] => {\n  return posts.sort((a, b) => {\n    return new Date(b.date).getTime() - new Date(a.date).getTime();\n  });\n};\n","import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useService } from \"../hooks/useService\";\nimport {\n  IPost,\n  PostContextState,\n  ContextProps,\n  IPostNew,\n} from \"../types/types\";\nimport { sortByDateDesc } from \"../utils/Sort\";\nimport { useNotification } from \"./NotificationContext\";\nimport { useUser } from \"./UserContext\";\n\nconst contextDefaultValues: PostContextState = {\n  posts: [],\n  addPost: () => {},\n  deletePost: () => {},\n  updatePost: () => {},\n  upvotePost: () => {},\n  downvotePost: () => {},\n};\n\nconst PostState = React.createContext<PostContextState>(contextDefaultValues);\n\nexport function usePosts() {\n  return useContext(PostState);\n}\n\nexport const PostContext = ({ children }: ContextProps) => {\n  const [posts, setPosts] = useState<IPost[]>([]);\n\n  const baseUrl = \"/api/posts\";\n  const postService = useService(baseUrl);\n\n  const { user } = useUser();\n  const { newNotification } = useNotification();\n\n  useEffect(() => {\n    let repeat: NodeJS.Timeout;\n\n    const fetch = async () => {\n      if (user) {\n        try {\n          console.log(\"Fetching posts...\");\n          const fetchedPosts: IPost[] = await (\n            await axios.get(baseUrl, {\n              headers: { Authorization: `bearer ${user.token}` },\n            })\n          ).data;\n          setPosts(sortByDateDesc(fetchedPosts));\n        } catch (error) {\n          console.log(\"Error fetching posts\", error.response.data);\n          newNotification(\"An error occured while fetching posts\");\n        }\n      }\n      repeat = setTimeout(fetch, 10000);\n    };\n\n    fetch();\n\n    return () => {\n      if (repeat) {\n        clearTimeout(repeat);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  // TODO Add try-catch for error-handling\n  const addPost = async (post: IPostNew) => {\n    try {\n      const savedPost = await postService.create(post);\n      const unsortedPosts: IPost[] = posts.concat(savedPost);\n      setPosts(sortByDateDesc(unsortedPosts));\n    } catch (error) {\n      console.log(\"Error adding new post\", error.response.data);\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  const deletePost = async (id: string) => {\n    try {\n      await postService.remove(id);\n    } catch (error) {\n      console.log(\"Removed from server\");\n      newNotification(error.response.data.errorMsg);\n    } finally {\n      setPosts(posts.filter((el) => el.id !== id));\n    }\n  };\n\n  const updatePost = async (post: IPost) => {\n    try {\n      const updatedPost = await postService.update(post.id, post);\n      const unsortedPosts = posts.map((el) =>\n        el.id === post.id ? updatedPost : el\n      );\n      setPosts(sortByDateDesc(unsortedPosts));\n    } catch (error) {\n      console.log(\"Removed from server\");\n      setPosts(posts.filter((el) => el.id !== post.id));\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  const upvotePost = async (post: IPost) => {\n    try {\n      const upvotedPost = await postService.update(\n        post.id,\n        post,\n        \"/api/posts/upvote\"\n      );\n      setPosts(posts.map((el) => (el.id === post.id ? upvotedPost : el)));\n    } catch (error) {\n      console.log(\"Removed from server\");\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  const downvotePost = async (post: IPost) => {\n    try {\n      const downvotedPost = await postService.update(\n        post.id,\n        post,\n        \"/api/posts/downvote\"\n      );\n      setPosts(posts.map((el) => (el.id === post.id ? downvotedPost : el)));\n    } catch (error) {\n      console.log(\"Removed from server\");\n      newNotification(error.response.data.errorMsg);\n    }\n  };\n\n  return (\n    <PostState.Provider\n      value={{\n        posts,\n        addPost,\n        deletePost,\n        updatePost,\n        upvotePost,\n        downvotePost,\n      }}\n    >\n      {children}\n    </PostState.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { IPost } from \"../../types/types\";\n\ninterface Props {\n  handleSubmit: (e: React.FormEvent) => void;\n  modalBtn: {\n    className: string;\n    text: string;\n    title: string | undefined;\n  };\n  modalBody: JSX.Element;\n  modalTitle: string;\n  modalConfirm: string;\n  post?: IPost;\n}\n\nexport const ModalForm = ({\n  handleSubmit,\n  modalBtn,\n  modalBody,\n  modalTitle,\n  modalConfirm,\n}: Props) => {\n  const [show, setShow] = useState<boolean>(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <button {...modalBtn} onClick={handleShow}>\n        {modalBtn.text}\n      </button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        animation={true}\n        dialogClassName={\"custom-modal\"}\n      >\n        <Modal.Header>\n          <Modal.Title className='text-warning'>{modalTitle}</Modal.Title>\n        </Modal.Header>\n\n        <form\n          onSubmit={(e) => {\n            handleSubmit(e);\n            handleClose();\n          }}\n        >\n          <Modal.Body>{modalBody}</Modal.Body>\n\n          <Modal.Footer>\n            <button\n              type='button'\n              className='btn btn-secondary'\n              onClick={handleClose}\n            >\n              Cancel\n            </button>\n            <button type='submit' className='btn btn-primary'>\n              {modalConfirm}\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </>\n  );\n};\n","export const useModalBtn = (\n  className: string,\n  text: string,\n  title?: string\n) => {\n  return { className, text, title };\n};\n","import React from \"react\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { usePosts } from \"../../state/PostContext\";\nimport { IPostNew } from \"../../types/types\";\nimport { ModalForm } from \"./ModalForm\";\nimport { useModalBtn } from \"../../hooks/useModalBtn\";\nimport { useUser } from \"../../state/UserContext\";\n\nexport const NewPostModal = () => {\n  // Input fields\n  const title = useInput(\"text\", \"Title...\");\n  const content = useInput(\"text\", \"Enter post...\");\n\n  const { addPost } = usePosts();\n  const { user } = useUser();\n\n  const handleAddPost = (e: React.FormEvent): void => {\n    e.preventDefault();\n\n    if (user) {\n      const post: IPostNew = {\n        title: title.value,\n        content: content.value,\n        author: user === null ? \"\" : user.name,\n        date: new Date().toISOString(),\n        upvotes: 0,\n        user: user.id,\n      };\n      addPost(post);\n      // Clear fields\n      title.onSubmit();\n      content.onSubmit();\n    }\n  };\n\n  const modalBody = () => {\n    return (\n      <>\n        <div className='row mx-auto'>\n          <input {...title} className='col-12' required maxLength={30} />\n        </div>\n        <div className='row mx-auto'>\n          <textarea\n            {...content}\n            className='col-12'\n            rows={6}\n            maxLength={500}\n            required\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <ModalForm\n        handleSubmit={handleAddPost}\n        modalBtn={useModalBtn(\n          \"btn main-button float-end\",\n          \"New Post\",\n          \"Create a new post\"\n        )}\n        modalBody={modalBody()}\n        modalTitle='Create new post'\n        modalConfirm='Submit'\n      />\n    </>\n  );\n};\n","import { usePosts } from \"../../state/PostContext\";\nimport { IPost } from \"../../types/types\";\nimport { ModalForm } from \"./ModalForm\";\nimport { useModalBtn } from \"../../hooks/useModalBtn\";\nimport React from \"react\";\n\ninterface Props {\n  post: IPost;\n}\n\nexport const DeletePostModal = ({ post }: Props) => {\n  const { deletePost } = usePosts();\n\n  const handleDeletePost = (e: React.FormEvent) => {\n    e.preventDefault();\n    deletePost(post.id);\n  };\n\n  const modalBody = () => {\n    return (\n      <p className='text-light'>{`Are you sure you want to delete '${post.title}'? This cannot be undone.`}</p>\n    );\n  };\n\n  return (\n    <ModalForm\n      handleSubmit={handleDeletePost}\n      modalBtn={useModalBtn(\"text-button\", \"Delete\", \"Delete post\")}\n      modalBody={modalBody()}\n      modalTitle='Delete post'\n      modalConfirm='Delete'\n    />\n  );\n};\n","import React from \"react\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { usePosts } from \"../../state/PostContext\";\nimport { IPost } from \"../../types/types\";\nimport { ModalForm } from \"./ModalForm\";\nimport { useModalBtn } from \"../../hooks/useModalBtn\";\n\ninterface Props {\n  post: IPost;\n}\n\nexport const EditPostModal = ({ post }: Props) => {\n  const title = useInput(\"text\", \"Title...\", post.title);\n  const content = useInput(\"text\", \"Enter post...\", post.content);\n\n  const { updatePost } = usePosts();\n\n  const handleEditPost = (e: React.FormEvent): void => {\n    e.preventDefault();\n\n    const updatedPost: IPost = {\n      ...post,\n      title: title.value,\n      content: content.value,\n      date: new Date().toISOString(),\n    };\n\n    updatePost(updatedPost);\n  };\n\n  const modalBody = () => {\n    return (\n      <>\n        <div className='row mx-auto'>\n          <input {...title} className='col-12' required maxLength={30} />\n        </div>\n        <div className='row mx-auto'>\n          <textarea\n            {...content}\n            className='col-12'\n            rows={6}\n            maxLength={500}\n            required\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <ModalForm\n        handleSubmit={handleEditPost}\n        modalBtn={useModalBtn(\"text-button\", \"Edit\", \"Edit post\")}\n        modalBody={modalBody()}\n        modalTitle='Edit post'\n        modalConfirm='Update'\n        post={post}\n      />\n    </>\n  );\n};\n","import dayjs from \"dayjs\";\n\nexport const formatDate = (date: string): string => {\n  // DD MM YYYY HH mm ss\n  const dayjsObj = dayjs(date);\n  // dayjsObj.locale(\"no\");\n\n  const oneDayMillis: number = 24 * 60 * 60 * 1000;\n\n  const now: Date = new Date();\n  const actualDate: Date = new Date(date);\n\n  // Less than a day, one display hours and minutes\n  if (now.getTime() - actualDate.getTime() < oneDayMillis) {\n    return dayjsObj.format(\"HH:mm\");\n  }\n\n  return dayjsObj.format(\"DD.MM.YYYY HH:mm\");\n};\n","import React from \"react\";\nimport { DeletePostModal } from \"../Modal/DeletePostModal\";\nimport { EditPostModal } from \"../Modal/EditPostModal\";\nimport { formatDate } from \"../../utils/DateFormat\";\nimport { usePosts } from \"../../state/PostContext\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp, faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useUser } from \"../../state/UserContext\";\n\nexport const Post = (post: any) => {\n  const { upvotePost, downvotePost } = usePosts();\n  const { user } = useUser();\n\n  const userOwnsPost = () => {\n    if (user) {\n      return user.id === post.user;\n    }\n    return false;\n  };\n\n  return (\n    <div>\n      <div className='card mt-3'>\n        <div className='card-body'>\n          <h3 className='card-title m-0 text-warning'>{post.title}</h3>\n          <h6 className='card-subtitle'>\n            by{\" \"}\n            <a\n              href={`/user/${post.user.id}`}\n              style={{ color: \"#E9E9D1\", textDecoration: \"none\" }}\n            >\n              {post.user.name}\n            </a>{\" \"}\n            | {formatDate(post.date)}\n          </h6>\n          <p className='card-text' style={{ whiteSpace: \"pre-wrap\" }}>\n            {post.content}\n          </p>\n          <div className=''>\n            <button\n              className='upvote-button btn d-inline-block'\n              onClick={() => upvotePost(post)}\n              title='Upvote post'\n            >\n              <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button\n              className='downvote-button btn d-inline-block'\n              onClick={() => downvotePost(post)}\n              title='Downvote post'\n            >\n              <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n            <h5 className='m-1 d-inline-block'>\n              <span className='badge bg-dark '>{post.upvotes}</span>\n            </h5>\n          </div>\n          <div className='card-footer'>\n            {userOwnsPost() && (\n              <div>\n                <EditPostModal post={post} />\n                &nbsp;\n                <DeletePostModal post={post} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IPost } from \"../../types/types\";\nimport { NewPostModal } from \"../Modal/NewPostModal\";\nimport { Post } from \"./Post\";\n\ninterface Props {\n  posts: IPost[];\n  title: string;\n  createNewButton?: boolean;\n}\n\nexport const PostList = ({ posts, title, createNewButton = true }: Props) => {\n  return (\n    <div className='d-flex justify-content-center pb-4'>\n      <ul className='post-list col-12 col-sm-12 col-md-10 col-lg-7 p-0'>\n        <div className='row ms-auto me-auto'>\n          <h2 className='col-8 p-0 mt-4 mb-1'>{title}</h2>\n          {createNewButton && (\n            <div className='col-4 p-0 mt-4 mb-1'>\n              <NewPostModal />\n            </div>\n          )}\n        </div>\n        {posts &&\n          posts.map((post) => (\n            <li key={post.id}>\n              <Post {...post} />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { usePosts } from \"../../state/PostContext\";\n\nimport { PostList } from \"./PostList\";\n\nexport const PostsHome = () => {\n  const { posts } = usePosts();\n  return (\n    <>\n      {/* <h2 className='p-0 mt-4 mb-3'>Posts</h2>\n      <NewPostModal /> */}\n      <PostList posts={posts} title='Posts' />\n    </>\n  );\n  // return <PostList posts={posts} />;\n};\n","import React from \"react\";\nimport { useNotification } from \"../state/NotificationContext\";\n\nexport const Notification = () => {\n  const { notification } = useNotification();\n\n  return (\n    <>\n      <footer className='fixed-bottom m-2'>\n        {notification && (\n          <div\n            className='alert alert-primary fade show custom-alert col-xs-12 col-sm-5 col-md-4 col-lg-3 col-xl-3'\n            role='alert'\n          >\n            {notification}\n          </div>\n        )}\n      </footer>\n    </>\n  );\n};\n","interface Props {\n  inputField?: any;\n  label: string;\n  id: string;\n  requiredField?: boolean;\n  defaultValue?: string;\n  value?: string;\n  onChange?: (e: any) => void;\n}\n\nexport const EditFormInput = ({\n  label,\n  id,\n  requiredField = true,\n  defaultValue,\n  value,\n  inputField,\n  onChange,\n}: Props) => {\n  return (\n    <div className='form-floating custom-form mt-2'>\n      <input\n        {...inputField}\n        className='col-12 form-control'\n        maxLength={30}\n        id={id}\n        required={requiredField}\n        defaultValue={defaultValue}\n        value={value}\n        onChange={onChange}\n      />\n      <label htmlFor={id}>{label}</label>{\" \"}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { useUser } from \"../../state/UserContext\";\nimport { IUserUpdate } from \"../../types/types\";\nimport { FormComponent } from \"./FormComponent\";\nimport { EditFormInput } from \"./EditFormInput\";\nimport { StdFormInput } from \"./StdFormInput\";\nimport { LoginForm } from \"./LoginForm\";\n\nexport const MyAccount = () => {\n  const { user, updateUserDetails } = useUser();\n\n  const oldPassword = useInput(\"password\", \"Password\");\n  const newPassword = useInput(\"password\", \"Password\");\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n\n  useEffect(() => {\n    console.log(\"User MyAccount\", user);\n    user === null ? <Redirect to='/login' /> : <MyAccount />;\n    <Redirect to='/login' />;\n    console.log(\"asdasdda\", user);\n    if (user) {\n      setEmail(user.email);\n      setName(user.name);\n    }\n  }, [user]);\n\n  const handleEdit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    console.log(\"name\", name, \"email\", email);\n\n    const newUser: IUserUpdate & { oldPassword: string } = {\n      email,\n      oldPassword: oldPassword.value,\n      password: newPassword.value,\n      name,\n    };\n\n    updateUserDetails(newUser);\n\n    oldPassword.onSubmit();\n    newPassword.onSubmit();\n  };\n\n  const formBody = () => {\n    return (\n      <>\n        <div>\n          {/* {user === null ? <Redirect to='/login' /> : <MyAccount />} */}\n          <h2>My Account</h2>\n          <div className='card-text'>\n            <EditFormInput\n              label='Email'\n              id='email'\n              requiredField={false}\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <EditFormInput\n              label='Name'\n              id='name'\n              requiredField={false}\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <br />\n            <label>Change password:</label>\n            <StdFormInput\n              inputField={oldPassword}\n              label='Current password'\n              id='oldPassword'\n              requiredField={false}\n            />\n            <StdFormInput\n              inputField={newPassword}\n              label='New password'\n              id='newPassword'\n              requiredField={false}\n            />\n          </div>\n          <div className='card-footer mt-3'>\n            <button type='submit' className='btn btn-primary main-button'>\n              Update details\n            </button>\n            <br />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {user !== null ? (\n        <FormComponent body={formBody} onSubmit={handleEdit} />\n      ) : (\n        <LoginForm />\n      )}\n      )\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useService } from \"../../hooks/useService\";\nimport { useUser } from \"../../state/UserContext\";\nimport { IPost } from \"../../types/types\";\nimport { PostList } from \"../Post/PostList\";\nimport { LoginForm } from \"./LoginForm\";\n\ninterface Props {\n  userId: string;\n}\n\nexport const UserProfile = ({ userId }: Props) => {\n  const { user } = useUser();\n  const [userPosts, setUserPosts] = useState<IPost[]>([]);\n\n  const userService = useService(\"/api/users/posts\");\n\n  useEffect(() => {\n    const fetch = async () => {\n      console.log(user?.token);\n      const fetchedUserPosts: IPost[] = await userService.get(userId);\n\n      setUserPosts(fetchedUserPosts);\n    };\n    if (user) fetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userId, user]);\n\n  const userName = () => {\n    if (user) {\n      return `Posts | name`;\n    }\n    return \"Your posts\";\n  };\n\n  return (\n    <>\n      {user !== null ? (\n        <PostList\n          posts={userPosts}\n          title={userName()}\n          createNewButton={false}\n        />\n      ) : (\n        <LoginForm />\n      )}\n    </>\n  );\n};\n","import { LoginForm } from \"./components/User/LoginForm\";\nimport { RegisterForm } from \"./components/User/RegisterForm\";\nimport { Switch, Route, Redirect, useRouteMatch } from \"react-router-dom\";\nimport { NavbarTop } from \"./components/NavbarTop\";\nimport { PostsHome } from \"./components/Post/PostsHome\";\nimport { useUser } from \"./state/UserContext\";\nimport { Notification } from \"./components/Notification\";\nimport { MyAccount } from \"./components/User/MyAccount\";\nimport { UserProfile } from \"./components/User/UserProfile\";\n// import { userIdPath } from \"./utils/StringUtils\";\n\nexport const App = () => {\n  const { user } = useUser();\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  // useEffect(() => fetchLocalStorageForUser(), []);\n  let match: any = useRouteMatch(\"/user/:id\");\n\n  return (\n    <div className='container'>\n      <NavbarTop />\n\n      <Switch>\n        <Route path='/user/:id'>\n          <UserProfile userId={match?.params.id} />\n        </Route>\n        <Route exact path='/'>\n          {user === null ? <Redirect to='/login' /> : <PostsHome />}\n        </Route>\n        <Route path='/register'>\n          {user === null ? <RegisterForm /> : <Redirect to='/' />}\n        </Route>\n        <Route path='/login'>\n          {user === null ? <LoginForm /> : <Redirect to='/' />}\n        </Route>\n        <Route path='/account'>\n          <MyAccount />\n        </Route>\n      </Switch>\n      <Notification />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { ContextProps } from \"../types/types\";\nimport { PostContext } from \"./PostContext\";\nimport { UserContext } from \"./UserContext\";\nimport { NotificationContext } from \"./NotificationContext\";\n\nconst State = React.createContext(null);\n\nexport const StateProvider = ({ children }: ContextProps) => {\n  return (\n    <State.Provider value={null}>\n      <NotificationContext>\n        <UserContext>\n          <PostContext>{children}</PostContext>\n        </UserContext>\n      </NotificationContext>\n    </State.Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { StateProvider } from \"./state/StateProvider\";\nimport { createBrowserHistory } from \"history\";\n\nimport \"./scss/index.scss\";\nimport { Router } from \"react-router-dom\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  // <React.StrictMode>\n  <StateProvider>\n    <Router {...{ history }}>\n      <App />\n    </Router>\n  </StateProvider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}